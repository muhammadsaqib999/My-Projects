# -*- coding: utf-8 -*-
"""App_of_Hand_Written_Digit_Recognotion Deep Learning Model(coolab)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lt2cNvSlo-W_V19sowaZylvE6LhNMNJn
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import cv2
from google.colab.patches import cv2_imshow
from PIL import Image
import tensorflow as tf
tf.random.set_seed(3)
from tensorflow import keras
from keras.datasets import mnist
from tensorflow.math import confusion_matrix

(x_train,y_train),(x_test,y_test)=mnist.load_data()

print(x_train.shape)
print(y_train.shape)
print(x_test.shape)
print(y_test.shape)

x_train=tf.keras.utils.normalize(x_train,axis=1)
x_test=tf.keras.utils.normalize(x_test,axis=1)

model=tf.keras.models.Sequential()
model.add(tf.keras.layers.Flatten(input_shape=(28,28)))
model.add(tf.keras.layers.Dense(128,activation='relu'))
model.add(tf.keras.layers.Dense(64,activation='relu'))
model.add(tf.keras.layers.Dense(32,activation='relu'))
model.add(tf.keras.layers.Dense(10,activation='softmax'))

model.summary()

model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])

model.fit(x_train,y_train,validation_data=(x_test,y_test),batch_size=32,epochs=5)

image = cv2.imread('444.png', cv2.IMREAD_GRAYSCALE) # Load image as grayscale
image = cv2.resize(image, (28, 28)) # Resize image to 28x28
image = np.invert(image) # Invert image
image = image.astype('float32') / 255.0 # Normalize pixel values
image = image.reshape(1, 28, 28) # Reshape to match model input shape

output = model.predict(image)
plt.imshow(image[0])
print(np.argmax(output))

model.save('/content/hand_wrtn.keras')

!npm install localtunnel

!streamlit run /content/app.py &>/content/logs.txt &

!pip install streamlit

!npx localtunnel --port 8501

