# -*- coding: utf-8 -*-
"""Diamond price

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12blfFCFoIP7vOUOXPeVlfWowNBdoDWtx
"""

from google.colab import files
uploaded = files.upload()  # This will open a file picker

import zipfile

# Specify the zip file name
zip_file = "Diamond Price Prediction.csv.zip"

# Extract the contents to the current directory
with zipfile.ZipFile(zip_file, 'r') as zip_ref:
    zip_ref.extractall("diamond_dataset")  # Extract to a folder named "diamond_dataset"

print("Extraction completed!")

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

a=pd.read_csv("diamond_dataset/Diamond Price Prediction.csv")

a.head()

a.drop(columns=['Table',	'X(length)',	'Y(width)'	,'Z(Depth)'],inplace=True)

a.rename(columns={'Carat(Weight of Daimond)': 'Carat',
                   'Cut(Quality)':'Cut',
                   'Price(in US dollars)':'Price'}, inplace=True)

a.head()

print(a["Cut"].unique())
print(a["Color"].unique())
print(a["Clarity"].unique())

"""**Label Encodingt**"""

from sklearn.preprocessing import LabelEncoder
lb=LabelEncoder()
a["Cut"]=lb.fit_transform(a["Cut"])
a["Color"]=lb.fit_transform(a["Color"])
a["Clarity"]=lb.fit_transform(a["Clarity"])

a.isnull().sum()

a.duplicated().sum()

a.drop_duplicates(inplace=True)

a.shape

a.drop(columns=['Depth'],inplace=True)

a.head()

"""**Train Test**"""

from sklearn.model_selection import train_test_split
x=a.drop(columns=['Price'])
y=a['Price']
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

rf=RandomForestRegressor(n_estimators=30)
rf.fit(x_train,y_train)

rf.predict([[0.75,	2,	0,	3]])

a.tail()

print("Train Accuracy : ",rf.score(x_train,y_train)*100)
print("Test Accuracy : ",rf.score(x_test,y_test)*100)

!pip install streamlit

import joblib

# Save the model
joblib.dump(rf, 'drmn_prc.joblib')

# To load the model later
# loaded_rf = joblib.load('drmn_prc.joblib')

!npm install localtunnel

!streamlit run /content/app.py &>/content/logs.txt &

!npx localtunnel --port 8501

